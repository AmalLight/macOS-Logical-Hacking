---
title: "Predicting Income with Social Data"
output: html_notebook
---
```{r message=FALSE, warning=FALSE}
# load packages and data
library(ggplot2)
library(dplyr)
library(modelr)
psid <- read.csv("psid_2017.csv")
```
```{r}
# view data structure
str ( psid )

# plot age
plot1 <- psid %>%
  ggplot ( aes ( age ) ) +
  geom_bar ()
plot1

# filter to reasonable age group
psid_clean <- psid %>%
  filter ( age > 18 , age < 75 )

# plot flitered age
plot2 <- psid_clean %>%
  ggplot ( aes ( age ) ) +
  geom_bar ()
plot2

# plot education
plot3 <- psid_clean %>%
  ggplot ( aes ( education_years , education_years  ) ) +
  geom_boxplot ()
plot3

# filter to reasonable education levels
psid_clean <- psid_clean %>%
  filter ( education_years > 5 , education_years < 25 )

# plot income
plot4 <- psid_clean %>%
  ggplot ( aes ( education_years , education_years ) ) +
  geom_boxplot ()
plot4

plot5 <- psid_clean %>%
  ggplot ( aes ( labor_income , labor_income ) ) +
  geom_boxplot ()
plot5

# view income summary statistics
summary ( psid_clean $ labor_income )

# plot mean income by age
plot6 <- psid_clean %>%
  group_by ( age ) %>%
  summarise ( MEAN_INCOME = mean( labor_income ) ) %>%
  ggplot ( aes ( age , MEAN_INCOME ) ) +
  geom_point ()
plot6

# subset data points into train and test sets
set.seed( 123 )
sample <- sample ( 
    c ( TRUE, FALSE ) ,
    nrow( psid_clean ) ,
    replace = T ,
    prob = c ( 0.6 , 0.4 )
)

# define train and test
train <- psid_clean [ sample, ]
test <- psid_clean [ !sample, ]

# build model
model <- lm( labor_income~education_years , data=train )

# plot against LOESS model
train %>%
  ggplot( aes ( education_years, labor_income ) ) +
  geom_point () +
  geom_smooth ( method='loess' , se=F , color="red" )

# compute r-squared
str ( summary ( model ) )
r_sq <- summary ( model ) $ r.squared * 100

# uncomment to write out r-squared interpretation
sprintf("Based on a simple linear regression model, we have determined that %s percent of the variation in respondent income can be predicted by a respondent's education level.", r_sq)

# build second model
model_2 <- lm( labor_income~education_years + age + gender , data=train )
r_sq_2 <- summary ( model_2 ) $ r.squared * 100

# uncomment to write out r-squared interpretation
sprintf("Based on a simple linear regression model, we have determined that %s percent of the variation in respondent income can be predicted by a respondent's education level, age and gender.", r_sq_2)

# plot predictions versus observed
train %>%
  add_predictions ( model_2 ) %>%
  ggplot ( aes ( age , labor_income ) ) +
  geom_point () +
  geom_line ( aes ( y=pred ) , color='blue' )

# write out model results
summary ( model_2 )

# extract education coefficent
# str ( model_2 )
model_2 $ coefficients [ 2 ]

# uncomment to write out coefficent interpretation
sprintf("Based on a multiple linear regression model of education, age, and gender, for every additional year of formal education, the average American resident's income increases by $%s.", education_coefficent)
```
