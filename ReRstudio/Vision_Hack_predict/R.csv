#,,,#,,,#,,,#,,,#,,,#,,,#
#,,,#,,,#,,,|PRINCIPAL|,,,#,,,#,,,#
#,,,#,,,#,,,#,,,#,,,#,,,#
p,,,cran,,,# packages took from https://www.cran.r-project.org,,,sourceurl,,,,,,darkgreen,,,1
p,,,install.packages,,,install.packages ( "°" ),,,install packages package°,,,,,,darkblue,,,
p,,,library,,,library ( ° ),,,import package from library°,,,,,,darkblue,,,
p,,,#,,,# °,,,comment here°,,,,,,darkgreen,,,
p,,,object,,,object° <- value°,,,create object° with value°,,,,,,,,,
p,,,tidyverse,,,# install.packages ( "tidyverse" ) °n  library ( tidyverse ),,,using tidyverse,,,,,,darkblue,,,
p,,,Rfast,,,# install.packages( "Rfast" ) °n  library ( Rfast ),,,using Rfast,,,,,,darkblue,,,
p,,,sjmisc,,,# install.packages( "sjmisc" ) °n  library ( sjmisc ),,,using sjmisc,,,,,,darkblue,,,
p,,,Rfast,,,# install.packages( "readr" ) °n  library ( readr ),,,using readr,,,,,,darkblue,,,
p,,,e1071,,,# install.packages( "e1071" ) °n  library ( e1071 ),,,using e1071,,,,,,darkblue,,,
p,,,itidyverse,,,# sudo apt install -y libxml2-dev libcurl4-openssl-dev,,,install for tidyverse,,,,,,,,,
p,,,iRfast,,,# sudo apt install -y libgsl-dev,,,install for Rfast,,,,,,,,,
#,,,#,,,#,,,#,,,#,,,#,,,#
#,,,#,,,#,,,|OBJECTS|,,,#,,,#,,,#
#,,,#,,,#,,,#,,,#,,,#,,,#
o,,,vector,,,x° : y°,,,object vector from x° y°,,,,,,,,,
o,,,vector,,,c ( ° , ° ),,,object vector from c variables°°,,,,,,,,,
o,,,is.vector,,,is.vector ( ° ),,,variable° is a vector ?,,,,,,darkblue,,,
o,,,is.complex,,,is.complex ( ° ),,,variable° is a complex ?,,,,,,darkblue,,,
o,,,is.na,,,is.na ( ° ),,,variable° is a NA ?,,,,,,darkblue,,,
o,,,T,,,True,,,True,,,,,,darkblue,,,
o,,,F,,,False,,,False,,,,,,darkblue,,,
o,,,True,,,True,,,True,,,,,,darkblue,,,
o,,,False,,,False,,,False,,,,,,darkblue,,,
o,,,NULL,,,NULL,,,NULL,,,black,,,white,,,
#,,,#,,,#,,,#,,,#,,,#,,,#
#,,,#,,,#,,,|FUNCTION|,,,#,,,#,,,#
#,,,#,,,#,,,#,,,#,,,#,,,#
f,,,f,,,name° <- function ( arg° ) °n{ °n},,,create function name° with argument°,,,,,,,,,
f,,,return,,,name° <- function ( arg° ) °n{return ( something° °n )},,,,,,,,,darkblue,,,
f,,,return,,,,,,create function name° with argument° and return something°,,,,,,,,,
f,,,c,,,c ( ° , ° ),,,combine variables°°,,,,,,darkblue,,,
f,,,cL,,,c ( °L , °L ),,,combine variables°°,,,,,,,,,
f,,,print,,,print ( ° ),,,print a variable°,,,,,,darkblue,,,
f,,,paste,,,paste ( ° , ° ),,,combine string variables°°,,,,,,darkblue,,,
f,,,str,,,str ( ° ),,,string form from variable°,,,,,,darkblue,,,
f,,,any,,,any ( matrix° ),,,reduce a matrix of TRUE or FALSE in one single VALUE,,,,,,darkblue,,,
f,,,varx,,,varx <- function(x) {return (sum((x-mean(x))^2) / (length(x)-1))},,,variance from x,,,,,,darkblue,,,
f,,,sdx,,,sdx <- function(x) {return ( sqrt( varx(x) ) )},,,standard deviation from x,,,,,,darkblue,,,
f,,,cv,,,cv <- function(x) {return ( sd(x) / mean(x) )},,,Coefficient of Variation from list_x,,,,,,darkblue,,,
f,,,covxy,,,covxy <- function(x,y) {return ( sum((x-mean(x))*(y-mean(y))) / (length(x)-1) )},,,,,,,,,darkblue,,,
f,,,covxy,,,,,,Covariance from list_x list_y,,,,,,,,,
f,,,corxy,,,corxy <- function(x,y) {return ( cov(x,y) / (sd(x)*sd(y)) )},,,,,,,,,darkblue,,,
f,,,corxy,,,,,,Correlation of Covariance from list_x list_y,,,,,,,,,
f,,,modex,,,modex <- function(x) {return ( sort(unique(x))[ which.max( table(x) ) ] )},,,,,,,,,darkblue,,,
f,,,modex,,,,,,mode from x using table,,,,,,,,,
f,,,skewnessx,,,skewnessx <- function(x) {,,,skewness from x , about skewed,,,,,,darkblue,,,
f,,,skewnessx,,,return ( sum( (x-mean(x))^3 ) / ( length(x) * sd(x)^3 ) )},,,,,,,,,,,,
f,,,standarizexy,,,standarizexy <- function(x,meany,sdy) {,,,,,,,,,darkblue,,,
f,,,standarizexy,,,return ( (mean(x)-meany) / sex( sdy,length(x) ) )},,,,,,,,,,,,
f,,,standarizexy,,,,,,standarize variables x for normal distribution using ,,,,,,,,,
f,,,standarizexy,,,,,,meany and sdy from population y,,,,,,,,,
f,,,sex,,,sex <- function(sdx,lenx) {return ( sdx / sqrt(lenx) )},,,,,,,,,darkblue,,,
f,,,sex,,,,,,standard error from the standard deviation of x and the lenght of x,,,,,,,,,
#,,,#,,,#,,,#,,,#,,,#,,,#
#,,,#,,,#,,,|GET-FUNCTION|,,,#,,,#,,,#
#,,,#,,,#,,,#,,,#,,,#,,,#
g,,,sample,,,<- sample ( list° , size° , replace = TF° ),,,,,,,,,darkblue,,,
g,,,sample,,,,,,get a sample from list° and size_number° and replace_boolean°,,,,,,,,,
g,,,seq,,,<- seq ( start° , end° , by = number° ),,,get a sequence from start° to end°,,,,,,darkblue,,,
g,,,class,,,<- class ( variable° ),,,get a class from variable°,,,,,,darkblue,,,
g,,,runif,,,<- runif ( size° , start° , end° ),,,get a random numbers from,,,,,,darkblue,,,
g,,,runif,,,,,, size_of_variables°° start_number° and end_number°,,,,,,,,,
g,,,rnorm,,,<- rnorm ( size° , mean° , standard_deviation° ),,,get a random numbers from,,,,,,darkblue,,,
g,,,rnorm,,,,,, size_of_variables°° mean_of_numbers° and the standard_deviation°,,,,,,,,,
g,,,factor,,,<- factor ( ° , levels = c ( ° , ° ) , labels = c ( ° , ° ) , ordered = TF° ),,,,,,,,,darkblue,,,
g,,,factor,,,,,,get a factorized values from variable° levels_variables°° labels_variables°°,,,,,,,,,
g,,,setdiff,,,<- setdiff ( x° , y° ),,,get differences between x° and y°,,,,,,darkblue,,,
g,,,names,,,<- names ( ° ),,,get names° from variable°,,,,,,darkblue,,,
g,,,dim,,,<- dim ( ° ),,,get class dimension of variable°,,,,,,darkblue,,,
g,,,attributes,,,<- attributes ( ° ),,,get attributes° from variable°,,,,,,darkblue,,,
g,,,typeof,,,<- typeof ( ° ),,,get a typeof from variable°,,,,,,darkblue,,,
g,,,table,,,<- table ( ° ),,,get a counts for each combination of factor levels from list°,,,,,,darkblue,,,
g,,,round,,,<- round ( ° , for_point° ),,,get a round from variable° and point_number°,,,,,,darkblue,,,
g,,,sum,,,<- sum ( ° ),,,get a sum from list°,,,,,,darkblue,,,
g,,,mean,,,<- mean ( ° ),,,get a mean from list°,,,,,,darkblue,,,
g,,,median,,,<- median ( ° ),,,get a median from list°,,,,,,darkblue,,,
g,,,modex,,,<- modex ( ° ),,,get the most counted value from list°,,,,,,darkblue,,,
g,,,sqrt,,,<- sqrt ( ° ),,,get square root from variable°,,,,,,darkblue,,,
g,,,var,,,<- var ( ° ),,,get the variance from list°,,,,,,darkblue,,,
g,,,varx,,,<- varx ( ° ),,,get the variance from list°,,,,,,darkblue,,,
g,,,sdx,,,<- sdx ( ° ),,,get the standard deviation from list°,,,,,,darkblue,,,
g,,,sd,,,<- sd ( ° ),,,get the standard deviation from list°,,,,,,darkblue,,,
g,,,cv,,,<- cv ( ° ),,,get Coefficient of Variation from list°,,,,,,darkblue,,,
g,,,skewnessx,,,<- skewnessx ( ° ),,,get Skewness from list°,,,,,,darkblue,,,
g,,,skewness,,,<- skewness ( ° ),,,get Skewness from list°,,,,,,darkblue,,,
g,,,covxy,,,<- covxy ( ° , ° ),,,get Covariance from list_x° list_y°,,,,,,darkblue,,,
g,,,corxy,,,<- corxy ( ° , ° ),,,get Correlation of Covariance from list_x° list_y°,,,,,,darkblue,,,
g,,,cor,,,<- cor ( ° ),,,get Correlation of Covariance from xy_matrix°,,,,,,darkblue,,,
g,,,prod,,,<- prod ( ° ),,,get a product from list°,,,,,,darkblue,,,
g,,,levels,,,<- levels ( ° ),,,get levels° from list°,,,,,,darkblue,,,
g,,,length,,,<- length ( ° ),,,get length of list°,,,,,,darkblue,,,
g,,,str_replace_all,,,<- str_replace_all ( string° , to_find° , to_replace° ),,,,,,,,,darkblue,,,
g,,,str_replace_all,,,,,,get new string where str_replace_all take effect,,,,,,,,,
g,,,str_contains,,,<- str_contains ( string° , 'value°' ),,,if string° contains value°,,,,,,darkblue,,,
g,,,parse_number,,,<- parse_number ( string° ),,,get number from string°,,,,,,darkblue,,,
g,,,apply,,,<- apply ( list° , margin° , fun° ),,,get new matrix° with function° executed ,,,,,,darkblue,,,
g,,,apply,,,,,,on margin° where 1 is done on each row and 2 is done on each column,,,,,,,,,
g,,,lapply,,,<- lapply ( list° , fun° ),,,get new list° with function° executed on,,,,,,darkblue,,,
g,,,sapply,,,<- sapply ( list° , fun° ),,,get new matrix from list° with function° executed on,,,,,,darkblue,,,
g,,,column,,,<- matrix° [[ x° ]],,,get list from converted column x° of matrix°,,,,,,darkblue,,,
#,,,#,,,#,,,#,,,#,,,#,,,#
#,,,#,,,#,,,|SET-FUNCTION|,,,#,,,#,,,#
#,,,#,,,#,,,#,,,#,,,#,,,#
s,,,set_names,,,names ( ° ) <- °,,,set names variable° using variable°,,,,,,,,,
s,,,set_vector,,,<- x° : y°,,,set vector° from x° y°,,,,,,,,,
s,,,set_vector,,,<- c ( ° , ° ),,, or using variables°°,,,,,,,,,
s,,,set_class,,,class°.name° <- variable°,,,set variable° name° into the class°,,,,,,,,,
s,,,set_dim,,,dim ( ° ) <- c ( ° , ° ),,,set class dimension variable° from variables°°,,,,,,,,,
s,,,set_levels,,,levels ( ° ) <- c ( ° , ° ),,,set levels° using variables°°,,,,,,,,,
#,,,#,,,#,,,#,,,#,,,#,,,#
#,,,#,,,#,,,|INFO|,,,#,,,#,,,#
#,,,#,,,#,,,#,,,#,,,#,,,#
i,,,coercion,,,# coercion : string , number , logical,,,coercion priority explained,,,,,,darkgreen,,,
i,,,ls,,,ls (),,,list of variables name,,,,,,darkblue,,,
i,,,help,,,help ( ° ),,,help for variable°,,,,,,darkblue,,,
i,,,?,,,? °,,,help for variable° or function°,,,,,,darkblue,,,
i,,,args,,,args ( ° ),,,arguments from variable°,,,,,,darkblue,,,
i,,,index,,,<- vector° [ number° ],,,index° from number°,,,,,,,,,
i,,,index,,,<- vector° [ +-number° ],,,,,,,,,,,,
i,,,index,,,<- vector° [ +-x° : +-y° ],,,, from x° y°,,,,,,,,,
i,,,index,,,<- vector° [ ( x° , y° ) ],,,,,,,,,,,,
i,,,index,,,<- vector° [ c ( x° , y° ) ],,,, from collection c ( ° , ° ),,,,,,,,,
i,,,index,,,<- vector° [ c ( x° : y° ) ],,,,,,,,,,,,
i,,,index,,,<- vector° [ - ( x° , y° ) ],,,,,,,,,,,,
i,,,index,,,<- vector° [ c ( index° , index° , index° ) ],,,, from index°,,,,,,,,,
i,,,index,,,<- vector° [ c ( name° , name° , name° ) ],,,, from name°,,,,,,,,,
i,,,index,,,<- vector° [ number° >° condition° ],,,, from condition°,,,,,,,,,
i,,,compare,,,== != < > <= >=,,,compare,,,,,,,,,
i,,,logical_vector,,,& | !,,,logical vector,,,,,,,,,
i,,,logical_single,,,&& || !,,,logical single,,,,,,,,,
i,,,if,,,if ( condition° ) { do° } else if ( condition° ) { do° },,,if condition then,,,,,,darkblue,,,
i,,,else,,,if ( condition° ) { do° } else { do° },,,if condition then,,,,,,darkblue,,,
i,,,for,,,for ( value° in vector° ) { do° },,,loop foreach then,,,,,,darkblue,,,
i,,,while,,,while ( condition° ) { do° },,,while until condition then,,,,,,darkblue,,,
i,,,repeat,,,repeat { do° °n if ( condition° ) { do° °n break } },,,repeat until not if,,,,,,darkblue,,,
i,,,sdxy,,,sdxy,,,sdxy is covariance , it is usefull for correlation,,,,,,darkblue,,,
#,,,#,,,#,,,#,,,#,,,#,,,#
#,,,#,,,#,,,|MATRIX|,,,#,,,#,,,#
#,,,#,,,#,,,#,,,#,,,#,,,#
m,,,m,,,<- matrix ( vector° , nrow=° , ncol=° , byrow = TF° , dimnames = list ( ° , ° ) ),,,,,,,,,,,,
m,,,m,,,,,,create new matrix using vector° row_number° column_number° ,,,,,,,,,
m,,,m,,,,,,byrow_boolean° dimnames_list_variables°°,,,,,,,,,
m,,,both,,,<- matrix° [ x° , y° ],,,get from matrix° x° y°,,,,,,,,,
m,,,row,,,<- matrix° [ x°, ],,,get row° from matrix° x°,,,,,,,,,
m,,,col,,,<- matrix° [ ,y° ],,,get row° from matrix° y°,,,,,,,,,
m,,,silcingrow,,,<- matrix° [ c ( ° , ° ), ],,,silcing row° from matrix° using variables°°,,,,,,,,,
m,,,silcingcol,,,<- matrix° [ ,c ( ° , ° ) ],,,silcing col° from matrix° using variables°°,,,,,,,,,
m,,,set_rownames,,,rownames ( matrix° ) <- °,,,set row names for matrix° using variable°,,,,,,,,,
m,,,set_colnames,,,colnames ( matrix° ) <- °,,,set col names for matrix° using variable°,,,,,,,,,
m,,,rownames,,,<- rownames ( matrix° ),,,get row° names for matrix°,,,,,,darkblue,,,
m,,,colnames,,,<- colnames ( matrix° ),,,get col° names for matrix°,,,,,,darkblue,,,
m,,,rbind,,,<- rbind ( ° , ° ),,,build matrix° using variables°° into rbind,,,,,,darkblue,,,
m,,,cbind,,,<- cbind ( ° , ° ),,,build matrix° using variables°° into cbind,,,,,,darkblue,,,
m,,,transpose,,,<- t ( matrix° ),,,transpose the matrix°,,,,,,,,,
m,,,operate_something,,,<- matrix° do_something° for_each°,,,do something for all matrix°,,,,,,,,,
m,,,operate_matrix,,,<- matrix1° do° matrix2°,,,matrix1° operation° matrix2°,,,,,,,,,
m,,,wise,,,<- matrix1° * matrix2°,,,matrix1° * operation matrix2°,,,,,,,,,
m,,,inner,,,<- matrix1° %*% matrix2°,,,matrix1° %*% operation matrix2°,,,,,,,,,
m,,,outer,,,<- matrix1° %o% matrix2°,,,matrix1° %o% operation matrix2°,,,,,,,,,
m,,,kronecker,,,<- matrix1° %x% matrix2°,,,matrix1° %x% operation matrix2°,,,,,,,,,
m,,,colSums,,,<- colSums ( matrix° ),,,vector° with the column sums of matrix°,,,,,,darkblue,,,
m,,,colMeans,,,<- colMeans ( matrix° ),,,vector° with the column means of matrix°,,,,,,darkblue,,,
m,,,colMins,,,<- colMins ( matrix° ),,,vector° with the column mins of matrix°,,,,,,darkblue,,,
m,,,colMaxs,,,<- colMaxs ( matrix° ),,,vector° with the column maxs of matrix°,,,,,,darkblue,,,
m,,,rowSums,,,<- rowSums ( matrix° ),,,vector° with the row sums of matrix°,,,,,,darkblue,,,
m,,,rowMeans,,,<- rowMeans ( matrix° ),,,vector° with the row means of matrix°,,,,,,darkblue,,,
m,,,rowMins,,,<- rowMins ( matrix° , value = TF° ),,,vector° with the row mins of matrix°,,,,,,darkblue,,,
m,,,rowMaxs,,,<- rowMaxs ( matrix° , value = TF° ),,,vector° with the row maxs of matrix°,,,,,,darkblue,,,
m,,,subset,,,<- subset ( matrix° , name° ==° value° ),,,,,,,,,darkblue,,,
m,,,subset,,,,,,get from matrix° all rows variables where name° respect ==° value°,,,,,,,,,
#,,,#,,,#,,,#,,,#,,,#,,,#
#,,,#,,,#,,,|LIST|,,,#,,,#,,,#
#,,,#,,,#,,,#,,,#,,,#,,,#
l,,,l,,,<- list ( ° , ° , list ( ° ) ),,,create new list from variables°° and other list°,,,,,,,,,
l,,,generic,,,<- list° [ ° ],,,get from list° a generic varliable/list°,,,,,,,,,
l,,,variable,,,<- list° [[ ° ]],,,get from list° a specific variable° content in the list,,,,,,,,,
l,,,casted,,,<- list1° [[ list2° ]] [ ° ],,,get from list1° a forced list2° variable°,,,,,,,,,
l,,,s,,,[[ ° ]],,,main symbol for list,,,,,,,,,
l,,,name,,,list° $ name°,,,get from list° by name°,,,,,,,,,
l,,,generic,,,list° [ name° ],,,get generic from list° by name°,,,,,,,,,
l,,,variable,,,list° [[ name° ]],,,get variable from list° by name°,,,,,,,,,
#,,,#,,,#,,,#,,,#,,,#,,,#
#,,,#,,,#,,,|DICTIONARY|,,,#,,,#,,,#
#,,,#,,,#,,,#,,,#,,,#,,,#
d,,,d,,,<- list ( key1° = ° , key2° = list ( ° ) ),,,create new dictionary using list type,,,,,,,,,
#,,,#,,,#,,,#,,,#,,,#,,,#
#,,,#,,,#,,,|DATA-FRAMES|,,,#,,,#,,,#
#,,,#,,,#,,,#,,,#,,,#,,,#
_,,,_,,,<- data.frame ( key1° = ° , key2° = ° , row.names = ° , strinsgAsFactors = TF° ),,,,,,,,,,,,
_,,,_,,,,,,create data frames using dictionary°° or simple variables°° like columns,,,,,,,,,
_,,,convert,,,<- as.data.frame ( ° ),,,convert matrix° to data.frame,,,,,,,,,
_,,,remove,,,matrix° $ name° <- NULL,,,remove a column name° from the matrix°,,,,,,,,,
#,,,#,,,#,,,#,,,#,,,#,,,#
#,,,#,,,#,,,|TIDYVERSE|,,,#,,,#,,,#
#,,,#,,,#,,,#,,,#,,,#,,,#
t,,,t,,,<- read.table ( "°" , sep = "°" , header = TF° , stringsAsFactors = TF° , ,,,,,,,,,,,,
t,,,t,,,                      dec = "°" , skip = ° , nrows = ° ),,,,,,,,,,,,
t,,,t,,,,,,create data frames using filenames_string° separator_string° ...° ,,,,,,,,,
t,,,t,,,,,,decimal_string° skip_number° read_only_nrows_number°,,,,,,,,,
t,,,more,,,read.csv read.csv2 read.delim2 read.delim,,,,,,,,,,,,
t,,,more,,,,,,|sep°|dec° :: read.csv|,|. read.csv2|;|, read.delim2|\t|, read.delim|\t|.,,,,,,,,,
t,,,save,,,write.table ( ° , file = '°' , sep = '°' , dec = '°' , ,,,save data frames,,,,,,,,,
t,,,save,,,                  eol = "\n" , col.names = TF° , row.names = TF° ),,,,,,,,,,,,
t,,,nrow,,,<- nrow ( ° ),,,get the number of row for the matrix°,,,,,,darkblue,,,
t,,,ncol,,,<- ncol ( ° ),,,get the number of col for the matrix°,,,,,,darkblue,,,
t,,,summary,,,<- summary ( ° ),,,get statistical informations about the matrix°,,,,,,darkblue,,,
t,,,head,,,<- head ( ° ),,,get head of the matrix°,,,,,,darkblue,,,
t,,,tail,,,<- tail ( ° ),,,get tail of the matrix°,,,,,,darkblue,,,
t,,,name,,,<- matrix° $ name°,,,get a column of the matrix° using the name°,,,,,,,,,
t,,,list,,,<- matrix° [[ ° ]],,,get a column of the matrix° as list,,,,,,,,,
t,,,filter,,,<- filter ( matrix° , name1° ==° ° , name2° ==° ° ),,,filter and like subset,,,,,,darkblue,,,
t,,,filter2,,,<- filter ( matrix° , name1° ==° ° | name2° ==° ° ),,,filter or like subset,,,,,,,,,
t,,,select,,,<- select ( matrix° , name1° , name2° ),,,get only name1° name2° from matrix°,,,,,,darkblue,,,
t,,,select2,,,<- select ( matrix° , name1°:name2° ),,,get only name1°:name2° from matrix°,,,,,,,,,
t,,,select3,,,<- select ( matrix° , start_with ( match° ) ),,,get only respect start_with,,,,,,,,,
t,,,select4,,,<- select ( matrix° , end_with ( match° ) ),,,get only respect end_with,,,,,,,,,
t,,,select5,,,<- select ( matrix° , name° , everything () ),,,get only good name° and others,,,,,,,,,
t,,,mutate,,,<- mutate ( matrix° , name° = ...° ),,,add new column name° in matrix° using ...°,,,,,,darkblue,,,
t,,,transmutate,,,<- transmutate ( matrix° , name° = ...° ),,,get only mutate matrix° column,,,,,,darkblue,,,
t,,,arrange,,,<- arrange ( matrix° , name° ),,,get order values from matrix° name°,,,,,,darkblue,,,
t,,,arrange2,,,<- arrange ( matrix° , desc ( name° ) ),,,get desc values from matrix° name°,,,,,,,,,
t,,,group_by,,,<- group_by ( matrix° , name° ),,,create multi dimensional matrix° using name°,,,,,,darkblue,,,
t,,,summarise,,,<- summarise ( matrix° , new° = do° ( name° ) ),,,,,,,,,darkblue,,,
t,,,summarise,,,,,,get new° using do° on name° from matrix°,,,,,,,,,
t,,,summarise2,,,<- summarise ( count = n () ),,,get count from prev. pipe group_by,,,,,,,,,
t,,,sample_n,,,<- sample_n ( matrix° , random° , replace = TF° ),,,,,,,,,darkblue,,,
t,,,sample_n,,,,,,get random_rows_number° from matrix°,,,,,,,,,
t,,,sample_frac,,,<- sample_frac ( matrix° , fraction° ),,,get fraction_float_number°,,,,,,darkblue,,,
t,,,%>%,,,%>%°n°t°,,,pipe from Dplyr, Doesn't need to keep matrix for each step,,,,,,darkblue,,,
t,,,tibble,,,<- as_tibble ( matrix° ),,,convert matrix° to tibble,,,,,,,,,
t,,,gather,,,<- gather ( matrix° , name1°:nameN° , key = new_name° , ,,,,,,,,,darkblue,,,
t,,,gather,,,                    value = other_new_name° , na.rm = TF° ),,,,,,,,,,,,
t,,,gather,,,,,,convert to matrix where names°° become new_name° and its ,,,,,,darkblue,,,
t,,,gather,,,,,,values° become other_name°,,,,,,,,,
t,,,separate,,,<- separate ( matrix° , name° , into = c ( '°' , '°' ) , sep = '°' ),,,,,,,,,darkblue,,,
t,,,separate,,,,,,separate a column name° in more c ( ... column 'name1°' , 'nameN°' ),,,,,,,,,
t,,,unite,,,<- unite ( matrix° , name° , c ( ° , ° ) , sep = '°' ),,,,,,,,,darkblue,,,
t,,,unite,,,,,,unite more c ( ... colum name1° , nameN° ) into one column name°,,,,,,,,,
t,,,spread,,,<- spread ( matrix° , key = name° , value = group_name_value° ),,,,,,,,,darkblue,,,
t,,,spread,,,,,,like inverse of gather, spread makes columns for each group by inside name°,,,,,,,,,
